1. Create database BlogSite.
	use blogsite
	switched to db blogsite

2. Create collection post.
	db.createCollection("post")
	{ "ok" : 1 }

3. Insert 10 documents with above mentioned structure.
	db.post.insert({title: 'MongoDB Overview', description: 'MongoDB is no sql database', by: 'tutorials 		point', url: 'http://www.tutorialspoint.com', tags: ['mongodb', 'database', 'NoSQL'], likes: 100, 		comments: [ { user:'user1', message: 'My first comment', dateCreated: new Date(2011,1,20,2,15), like: 		0 }, { user:'user2', message: 'My second comments', dateCreated: new Date(2011,1,25,7,45), like: 5 } ] })

	WriteResult({ "nInserted" : 1 })

4. Display all posts information.

	SAMPLE :

	{
		"_id" : ObjectId("57dc115df720dca251305751"),
		"title" : "Samsung J2 Pro",
		"description" : "mobile company",
		"by" : "Lobo",
		"url" : "http://www.samsung.org",
		"tags" : [
			"j2 pro",
			"mobile"
		],
		"likes" : 1470,
		"comments" : [
			{
				"user" : "user8",
				"message" : "super",
				"dateCreated" : ISODate("2016-09-14T22:24:00Z"),
				"like" : 52
			}
		]
	}

------------------------------
 Update different records
------------------------------

1. Increment value of likes in one record($inc)
	db.post.update({title:"Audi"},{$inc:{likes:1}})
	WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
	db.post.find({title:"Audi"}).pretty()
	{
		"_id" : ObjectId("57dc10b5f720dca251305750"),
		"title" : "Audi",
		"description" : "car company",
		"by" : "Roy",
		"url" : "http://www.audi.com",
		"tags" : [
			"car",
			"audi"
		],
		"likes" : 2351,
		"comments" : [
			{
				"user" : "user7",
				"message" : "awesome",
				"dateCreated" : ISODate("2015-04-29T03:13:00Z"),
				"like" : 101
			}
		]
	}

2. Push some more tags ($push)
	db.post.update({title:"Java"},{$push:{tags:"widely used"}})
	WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
	db.post.find({title:"Java"}).pretty()
	{
		"_id" : ObjectId("57dbbc4bf720dca25130574d"),
		"title" : "Java",
		"description" : "Programming Lang",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			"lang",
			"widely used"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}

3. Pop some comments($pop)
	db.post.update({title:"Audi"},{$pop:{tags:"car"}})
	WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
	db.post.find({title:"Audi"}).pretty()
	{
		"_id" : ObjectId("57dc10b5f720dca251305750"),
		"title" : "Audi",
		"description" : "car company",
		"by" : "Roy",
		"url" : "http://www.audi.com",
		"tags" : [
			"car"
		],
		"likes" : 2351,
		"comments" : [
			{
				"user" : "user7",
				"message" : "awesome",
				"dateCreated" : ISODate("2015-04-29T03:13:00Z"),
				"like" : 101
			}
		]
	}

4. Replace existing record with new record(update)

	db.post.update({title:"Java"},{$set:{description:"widely used programming lang.."}})
	WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
	db.post.find({title:"Java"}).pretty()
	{
		"_id" : ObjectId("57dbbc4bf720dca25130574d"),
		"title" : "Java",
		"description" : "widely used programming lang..",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			"lang"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}


5. set the new title 'New Mong oDB T utorial' of the documents whose title is 'Mong oDB Overview'.($set)

	db.post.update({title:"Audi"},{$set:{title:"Audi A6000"}})
	WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
	db.post.find({title:"Audi A6000"}).pretty()
	{
		"_id" : ObjectId("57dc10b5f720dca251305750"),
		"title" : "Audi A6000",
		"description" : "car company",
		"by" : "Roy",
		"url" : "http://www.audi.com",
		"tags" : [
			"car"
		],
		"likes" : 2351,
		"comments" : [
			{
				"user" : "user7",
				"message" : "awesome",
				"dateCreated" : ISODate("2015-04-29T03:13:00Z"),
				"like" : 101
			}
		]
	}


6. Add one record if doesn’t exist else update($upsert)


	 db.post.update({Title:"Audi A6000"},{Title:"Audi A6000",By:"Roy",Description:"Upsert"},{upsert:true})
	WriteResult({
		"nMatched" : 0,
		"nUpserted" : 1,
		"nModified" : 0,
		"_id" : ObjectId("57dc15ab769ce6995323a0ab")
	})


1. Remove all the documents whose title is 'MongoDB Overview'
	 db.post.remove({title:"MongoDB Overview"})
	WriteResult({ "nRemoved" : 2 })


2. Use $gte,$gt,$lt operators and fire queries.

	db.post.find({"comments.like":{$gte:100}}).pretty()
	{
		"_id" : ObjectId("57dc10b5f720dca251305750"),
		"title" : "Audi A6000",
		"description" : "car company",
		"by" : "Roy",
		"url" : "http://www.audi.com",
		"tags" : [
			"car"
		],
		"likes" : 2351,
		"comments" : [
			{
				"user" : "user7",
				"message" : "awesome",
				"dateCreated" : ISODate("2015-04-29T03:13:00Z"),
				"like" : 101
			}
		]
	}

---------------------
	 db.post.find({"comments.like":{$gt:10}}).pretty()
	{
		"_id" : ObjectId("57dc0f76f720dca25130574f"),
		"title" : "C++",
		"description" : "Object Oriented Prog",
		"by" : "Katenkar",
		"url" : "http://www.Katenkar.co.in",
		"tags" : [
			"c",
			"c++",
			"lang"
		],
		"likes" : 350,
		"comments" : [
			{
				"user" : "user6",
				"message" : "ok",
				"dateCreated" : ISODate("2008-03-27T20:53:00Z"),
				"like" : 11
			}
		]
	}
	{
		"_id" : ObjectId("57dc10b5f720dca251305750"),
		"title" : "Audi A6000",
		"description" : "car company",
		"by" : "Roy",
		"url" : "http://www.audi.com",
		"tags" : [
			"car"
		],
		"likes" : 2351,
		"comments" : [
			{
				"user" : "user7",
				"message" : "awesome",
				"dateCreated" : ISODate("2015-04-29T03:13:00Z"),
				"like" : 101
			}
		]
	}
	{
		"_id" : ObjectId("57dc115df720dca251305751"),
		"title" : "Samsung J2 Pro",
		"description" : "mobile company",
		"by" : "Lobo",
		"url" : "http://www.samsung.org",
		"tags" : [
			"j2 pro",
			"mobile"
		],
		"likes" : 1470,
		"comments" : [
			{
				"user" : "user8",
				"message" : "super",
				"dateCreated" : ISODate("2016-09-14T22:24:00Z"),
				"like" : 52
			}
		]
	}


3. Find records having tags ‘mongodb’.

	db.post.find({tags:"lang"}).pretty()
	{
		"_id" : ObjectId("57dbbc4bf720dca25130574d"),
		"title" : "Java",
		"description" : "widely used programming lang..",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			"lang"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}
	{
		"_id" : ObjectId("57dc0eecf720dca25130574e"),
		"title" : "Advance Java",
		"description" : "Programming Lang",
		"by" : "hutch",
		"url" : "http://www.hutch.com",
		"tags" : [
			"java",
			"adv java",
			"lang"
		],
		"likes" : 900,
		"comments" : [
			{
				"user" : "user5",
				"message" : "good",
				"dateCreated" : ISODate("2014-05-26T05:00:00Z"),
				"like" : 9
			}
		]
	}
	{
		"_id" : ObjectId("57dc0f76f720dca25130574f"),
		"title" : "C++",
		"description" : "Object Oriented Prog",
		"by" : "Katenkar",
		"url" : "http://www.Katenkar.co.in",
		"tags" : [
			"c",
			"c++",
			"lang"
		],
		"likes" : 350,
		"comments" : [
			{
				"user" : "user6",
				"message" : "ok",
				"dateCreated" : ISODate("2008-03-27T20:53:00Z"),
				"like" : 11
			}
		]
	}

4. Find records having more than 1000 likes.

	db.post.find({likes:{$gt:1000}}).pretty()
	{
		"_id" : ObjectId("57dc10b5f720dca251305750"),
		"title" : "Audi A6000",
		"description" : "car company",
		"by" : "Roy",
		"url" : "http://www.audi.com",
		"tags" : [
			"car"
		],
		"likes" : 2351,
		"comments" : [
			{
				"user" : "user7",
				"message" : "awesome",
				"dateCreated" : ISODate("2015-04-29T03:13:00Z"),
				"like" : 101
			}
		]
	}
	{
		"_id" : ObjectId("57dc115df720dca251305751"),
		"title" : "Samsung J2 Pro",
		"description" : "mobile company",
		"by" : "Lobo",
		"url" : "http://www.samsung.org",
		"tags" : [
			"j2 pro",
			"mobile"
		],
		"likes" : 1470,
		"comments" : [
			{
				"user" : "user8",
				"message" : "super",
				"dateCreated" : ISODate("2016-09-14T22:24:00Z"),
				"like" : 52
			}
		]
	}

5. Drop collection.  

	db.createCollection("demo")
	{ "ok" : 1 }
	show collections
	demo
	post
	system.indexes
	db.demo.drop()
	true
	show collections
	post
	system.indexes
	


6. Find all records starting with title ‘M’.

	db.post.find({title:/^A/}).pretty()
	{
		"_id" : ObjectId("57dc0eecf720dca25130574e"),
		"title" : "Advance Java",
		"description" : "Programming Lang",
		"by" : "hutch",
		"url" : "http://www.hutch.com",
		"tags" : [
			"java",
			"adv java",
			"lang"
		],
		"likes" : 900,
		"comments" : [
			{
				"user" : "user5",
				"message" : "good",
				"dateCreated" : ISODate("2014-05-26T05:00:00Z"),
				"like" : 9
			}
		]
	}
	{
		"_id" : ObjectId("57dc10b5f720dca251305750"),
		"title" : "Audi A6000",
		"description" : "car company",
		"by" : "Roy",
		"url" : "http://www.audi.com",
		"tags" : [
			"car"
		],
		"likes" : 2351,
		"comments" : [
			{
				"user" : "user7",
				"message" : "awesome",
				"dateCreated" : ISODate("2015-04-29T03:13:00Z"),
				"like" : 101
			}
		]
	}

7. Find all records having Mongo in their title.

	db.post.find({title:/Java/}).pretty()
	{
		"_id" : ObjectId("57dbbc4bf720dca25130574d"),
		"title" : "Java",
		"description" : "widely used programming lang..",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			"lang"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}
	{
		"_id" : ObjectId("57dc0eecf720dca25130574e"),
		"title" : "Advance Java",
		"description" : "Programming Lang",
		"by" : "hutch",
		"url" : "http://www.hutch.com",
		"tags" : [
			"java",
			"adv java",
			"lang"
		],
		"likes" : 900,
		"comments" : [
			{
				"user" : "user5",
				"message" : "good",
				"dateCreated" : ISODate("2014-05-26T05:00:00Z"),
				"like" : 9
			}
		]
	}


8. Find total count of records in your collection.

	db.post.count()
	9

9. All the documents where the number of tags is four.($size)

	db.post.find({tags:{$size:2}}).pretty()

	{
		"_id" : ObjectId("57dc1d6bf720dca251305753"),
		"title" : "MongoDB Overview",
		"description" : "nosql database",
		"by" : "Mr.shah",
		"url" : "http://www.shahtuts.com",
		"tags" : [
			"mongodb",
			"NoSQL"
		],
		"likes" : 150,
		"comments" : [
			{
				"user" : "user3",
				"message" : "third comment",
				"dateCreated" : ISODate("2008-05-14T23:25:00Z"),
				"like" : 2
			}
		]
	}
	{
		"_id" : ObjectId("57dc1dd5f720dca251305754"),
		"title" : "ASP.NET",
		"description" : "Programming Lang",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			".net"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}


10. Display the title of the document while querying the document.

	db.post.find({title:"MongoDB"},{title:1})
		{ "_id" : ObjectId("579af066f4a2935660c912a7"), "title" : "MongoDB" }

11. Display the documents sorted by title in descending order.
	db.post.find().sort({title:-1}).pretty()
	{
		"_id" : ObjectId("57dc115df720dca251305751"),
		"title" : "Samsung J2 Pro",
		"description" : "mobile company",
		"by" : "Lobo",
		"url" : "http://www.samsung.org",
		"tags" : [
			"j2 pro",
			"mobile"
		],
		"likes" : 1470,
		"comments" : [
			{
				"user" : "user8",
				"message" : "super",
				"dateCreated" : ISODate("2016-09-14T22:24:00Z"),
				"like" : 52
			}
		]
	}
	{
		"_id" : ObjectId("57dc1d6bf720dca251305753"),
		"title" : "MongoDB Overview",
		"description" : "nosql database",
		"by" : "Mr.shah",
		"url" : "http://www.shahtuts.com",
		"tags" : [
			"mongodb",
			"NoSQL"
		],
		"likes" : 150,
		"comments" : [
			{
				"user" : "user3",
				"message" : "third comment",
				"dateCreated" : ISODate("2008-05-14T23:25:00Z"),
				"like" : 2
			}
		]
	}
	{
		"_id" : ObjectId("57dc1d5ef720dca251305752"),
		"title" : "MongoDB Overview",
		"description" : "MongoDB is no sql database",
		"by" : "tutorials point",
		"url" : "http://www.tutorialspoint.com",
		"tags" : [
			"mongodb",
			"database",
			"NoSQL"
		],
		"likes" : 100,
		"comments" : [
			{
				"user" : "user1",
				"message" : "My first comment",
				"dateCreated" : ISODate("2011-02-19T20:45:00Z"),
				"like" : 0
			},
			{
				"user" : "user2",
				"message" : "My second comments",
				"dateCreated" : ISODate("2011-02-25T02:15:00Z"),
				"like" : 5
			}
		]
	}
	{
		"_id" : ObjectId("57dbbc4bf720dca25130574d"),
		"title" : "Java",
		"description" : "widely used programming lang..",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			"lang"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}
	{
		"_id" : ObjectId("57dc0f76f720dca25130574f"),
		"title" : "C++",
		"description" : "Object Oriented Prog",
		"by" : "Katenkar",
		"url" : "http://www.Katenkar.co.in",
		"tags" : [
			"c",
			"c++",
			"lang"
		],
		"likes" : 350,
		"comments" : [
			{
				"user" : "user6",
				"message" : "ok",
				"dateCreated" : ISODate("2008-03-27T20:53:00Z"),
				"like" : 11
			}
		]
	}
	{
		"_id" : ObjectId("57dc10b5f720dca251305750"),
		"title" : "Audi A6000",
		"description" : "car company",
		"by" : "Roy",
		"url" : "http://www.audi.com",
		"tags" : [
			"car"
		],
		"likes" : 2351,
		"comments" : [
			{
				"user" : "user7",
				"message" : "awesome",
				"dateCreated" : ISODate("2015-04-29T03:13:00Z"),
				"like" : 101
			}
		]
	}
	{
		"_id" : ObjectId("57dc0eecf720dca25130574e"),
		"title" : "Advance Java",
		"description" : "Programming Lang",
		"by" : "hutch",
		"url" : "http://www.hutch.com",
		"tags" : [
			"java",
			"adv java",
			"lang"
		],
		"likes" : 900,
		"comments" : [
			{
				"user" : "user5",
				"message" : "good",
				"dateCreated" : ISODate("2014-05-26T05:00:00Z"),
				"like" : 9
			}
		]
	}
	{
		"_id" : ObjectId("57dc1dd5f720dca251305754"),
		"title" : "ASP.NET",
		"description" : "Programming Lang",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			".net"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}
	{
		"_id" : ObjectId("57dc15ab769ce6995323a0ab"),
		"Title" : "Audi A6000",
		"By" : "Roy",
		"Description" : "Upsert"
	}

12. Show all the tutorials written by 'tutorials point' and whose title is 'MongoDB Overview'.

	db.post.find({$and:[{title:"MongoDB"},{by:"ABC"}]}).pretty()
		{
			"_id" : ObjectId("579851906f8d023e293d62d0"),
			"title" : "MongoDB",
			"description" : "MongoDB is no sql DB",
			"by" : "ABC",
			"url" : "ABC.com",
			"tags" : [
				"mongodb",
				"database",
				"NoSQL"
			]
		}

13. show all the tutorials written by 'tutorials point' or whose title is 'Mong oDB Overview'

	db.post.find({$or:[{title:"MongoDB"},{by:"Technovanza"}]}).pretty()
		{
			"_id" : ObjectId("579851906f8d023e293d62d0"),
			"title" : "MongoDB",
			"description" : "MongoDB is no sql DB",
			"by" : "ABC",
			"url" : "ABC.com",
			"tags" : [
				"mongodb",
				"database",
				"NoSQL"
			]
		}
		{
			"_id" : ObjectId("579856c56f8d023e293d62d3"),
			"title" : "NoSql Database",
			"description" : "NoSql db doesn't have tables",
			"by" : "Technovanza",
			"url" : "Technovanza.com",
			"tags" : [
				"abc",
				"xyz",
				"pqr"
			],
			"likes" : 300,
			"comments" : [
				{
					"user" : "user1",
					"message" : "first comment of mine",
					"dateCreated" : ISODate("2018-04-07T07:05:00Z"),
					"like" : 1
				}
			]
		}

14. Display only 2 documents while querying the document.

	db.post.find().limit(2).pretty()
	{
		"_id" : ObjectId("57dbbc4bf720dca25130574d"),
		"title" : "Java",
		"description" : "widely used programming lang..",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			"lang"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}
	{
		"_id" : ObjectId("57dc0eecf720dca25130574e"),
		"title" : "Advance Java",
		"description" : "Programming Lang",
		"by" : "hutch",
		"url" : "http://www.hutch.com",
		"tags" : [
			"java",
			"adv java",
			"lang"
		],
		"likes" : 900,
		"comments" : [
			{
				"user" : "user5",
				"message" : "good",
				"dateCreated" : ISODate("2014-05-26T05:00:00Z"),
				"like" : 9
			}
		]
	}



15. Locate all the documents that contain the tags “mongodb”,”nosql”.($all)
	db.post.find({tags:{$all:["lang"]}}).pretty()
	{
		"_id" : ObjectId("57dbbc4bf720dca25130574d"),
		"title" : "Java",
		"description" : "widely used programming lang..",
		"by" : "infotech",
		"url" : "http://www.infotech.co",
		"tags" : [
			"java",
			"lang"
		],
		"likes" : 500,
		"comments" : [
			{
				"user" : "user4",
				"message" : "nice",
				"dateCreated" : ISODate("2012-07-22T00:00:00Z"),
				"like" : 7
			}
		]
	}
	{
		"_id" : ObjectId("57dc0eecf720dca25130574e"),
		"title" : "Advance Java",
		"description" : "Programming Lang",
		"by" : "hutch",
		"url" : "http://www.hutch.com",
		"tags" : [
			"java",
			"adv java",
			"lang"
		],
		"likes" : 900,
		"comments" : [
			{
				"user" : "user5",
				"message" : "good",
				"dateCreated" : ISODate("2014-05-26T05:00:00Z"),
				"like" : 9
			}
		]
	}
	{
		"_id" : ObjectId("57dc0f76f720dca25130574f"),
		"title" : "C++",
		"description" : "Object Oriented Prog",
		"by" : "Katenkar",
		"url" : "http://www.Katenkar.co.in",
		"tags" : [
			"c",
			"c++",
			"lang"
		],
		"likes" : 350,
		"comments" : [
			{
				"user" : "user6",
				"message" : "ok",
				"dateCreated" : ISODate("2008-03-27T20:53:00Z"),
				"like" : 11
			}
		]
	}
